CREATE TABLE AC_USER_ROLE_ASSIGN
(
    USER_ID        VARCHAR(16)      NOT NULL,
    ROLE_ID        VARCHAR(6)  NOT NULL,
    ACTIVATED_AT   DATETIME    NOT NULL,
    DEACTIVATED_AT DATETIME    NOT NULL,
    APPROVED_BY    VARCHAR(16),
    REMARKS        VARCHAR(100),
    CREATED_AT     DATETIME    NOT NULL,
    CREATED_BY     VARCHAR(32) NOT NULL,
    UPDATED_AT     DATETIME    NOT NULL,
    UPDATED_BY     VARCHAR(32) NOT NULL,
    INDEX USER_ROLE_ASSIGN_IDX (USER_ID)
);

CREATE TABLE AC_USER_ROLE_ASSIGN_H
(
    AUDIT_ID       BIGINT PRIMARY KEY AUTO_INCREMENT,
    AUDIT_TYPE     CHAR(2),
    AUDIT_TIME     DATETIME,
    USER_ID        VARCHAR(16),
    ROLE_ID        VARCHAR(6),
    ACTIVATED_AT   DATETIME,
    DEACTIVATED_AT DATETIME,
    APPROVED_BY    VARCHAR(16),
    REMARKS        VARCHAR(100),
    CREATED_AT     DATETIME,
    CREATED_BY     VARCHAR(32),
    UPDATED_AT     DATETIME,
    UPDATED_BY     VARCHAR(32)
);


DELIMITER ##
CREATE TRIGGER AC_USER_ROLE_ASSIGN_TRG_AI
    AFTER INSERT
    ON AC_USER_ROLE_ASSIGN
    FOR EACH ROW
BEGIN
    INSERT INTO AC_USER_ROLE_ASSIGN_H(AUDIT_ID, AUDIT_TYPE, AUDIT_TIME,
                                      USER_ID, ROLE_ID, ACTIVATED_AT, DEACTIVATED_AT, APPROVED_BY, REMARKS,
                                      CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
    VALUES (NULL, 'AI', NOW(),
            NEW.USER_ID, NEW.ROLE_ID, NEW.ACTIVATED_AT, NEW.DEACTIVATED_AT, NEW.APPROVED_BY, NEW.REMARKS,
            NEW.CREATED_AT, NEW.CREATED_BY, NEW.UPDATED_AT, NEW.UPDATED_BY);
END ##
DELIMITER ;

DELIMITER ##
CREATE TRIGGER AC_USER_ROLE_ASSIGN_TRG_BU
    BEFORE UPDATE
    ON AC_USER_ROLE_ASSIGN
    FOR EACH ROW
BEGIN
    INSERT INTO AC_USER_ROLE_ASSIGN_H(AUDIT_ID, AUDIT_TYPE, AUDIT_TIME,
                                      USER_ID, ROLE_ID, ACTIVATED_AT, DEACTIVATED_AT, APPROVED_BY, REMARKS,
                                      CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
    VALUES (NULL, 'BU', NOW(),
            OLD.USER_ID, OLD.ROLE_ID, OLD.ACTIVATED_AT, OLD.DEACTIVATED_AT, OLD.APPROVED_BY, OLD.REMARKS,
            OLD.CREATED_AT, OLD.CREATED_BY, OLD.UPDATED_AT, OLD.UPDATED_BY);
END ##
DELIMITER ;

DELIMITER ##
CREATE TRIGGER AC_USER_ROLE_ASSIGN_TRG_AU
    AFTER UPDATE
    ON AC_USER_ROLE_ASSIGN
    FOR EACH ROW
BEGIN
    INSERT INTO AC_USER_ROLE_ASSIGN_H(AUDIT_ID, AUDIT_TYPE, AUDIT_TIME,
                                      USER_ID, ROLE_ID, ACTIVATED_AT, DEACTIVATED_AT, APPROVED_BY, REMARKS,
                                      CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
    VALUES (NULL, 'AU', NOW(),
            NEW.USER_ID, NEW.ROLE_ID, NEW.ACTIVATED_AT, NEW.DEACTIVATED_AT, NEW.APPROVED_BY, NEW.REMARKS,
            NEW.CREATED_AT, NEW.CREATED_BY, NEW.UPDATED_AT, NEW.UPDATED_BY);
END ##
DELIMITER ;

DELIMITER ##
CREATE TRIGGER AC_USER_ROLE_ASSIGN_TRG_BD
    BEFORE DELETE
    ON AC_USER_ROLE_ASSIGN
    FOR EACH ROW
BEGIN
    INSERT INTO AC_USER_ROLE_ASSIGN_H(AUDIT_ID, AUDIT_TYPE, AUDIT_TIME,
                                      USER_ID, ROLE_ID, ACTIVATED_AT, DEACTIVATED_AT, APPROVED_BY, REMARKS,
                                      CREATED_AT, CREATED_BY, UPDATED_AT, UPDATED_BY)
    VALUES (NULL, 'BD', NOW(),
            OLD.USER_ID, OLD.ROLE_ID, OLD.ACTIVATED_AT, OLD.DEACTIVATED_AT, OLD.APPROVED_BY, OLD.REMARKS,
            OLD.CREATED_AT, OLD.CREATED_BY, OLD.UPDATED_AT, OLD.UPDATED_BY);
END ##
DELIMITER ;