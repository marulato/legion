CREATE TABLE STU_STUDENT_FAMILY_PF
(
    STU_NO                       VARCHAR(16),
    HOME_ADDRESS                 VARCHAR(500),
    POSTCODE                     VARCHAR(6),
    IS_ONLY_CHILD                CHAR(1),
    NUMBER_OF_CHILDREN_IN_FAMILY INT,
    OTHER_CHILDREN               VARCHAR(500),
    PARENTS_MARITAL_STATUS       CHAR(1),
    FATHER_NAME                  VARCHAR(24),
    FATHER_DOB                   DATE,
    FATHER_OCCUPATION_TYPE       VARCHAR(6),
    FATHER_OCCUPATION            VARCHAR(500),
    FATHER_MONTHLY_INCOME        INT,
    FATHER_WORKPLACE             VARCHAR(500),
    FATHER_POSITION              VARCHAR(100),
    MOTHER_NAME                  VARCHAR(24),
    MOTHER_DOB                   DATE,
    MOTHER_OCCUPATION_TYPE       VARCHAR(6),
    MOTHER_OCCUPATION            VARCHAR(500),
    MOTHER_MONTHLY_INCOME        INT,
    MOTHER_WORKPLACE             VARCHAR(500),
    MOTHER_POSITION              VARCHAR(100),
    FAMILY_YEARLY_INCOME         INT,
    RAISED_BY                    CHAR(1),
    RAISED_BY_OTHER              VARCHAR(500),
    OTHER_GUARDIANS              VARCHAR(500),
    CREATED_AT                   DATETIME    NOT NULL,
    CREATED_BY                   VARCHAR(24) NOT NULL,
    UPDATED_AT                   DATETIME    NOT NULL,
    UPDATED_BY                   VARCHAR(24) NOT NULL
);

ALTER TABLE STU_STUDENT_FAMILY_PF
    ADD CONSTRAINT FAM_STU_NO_FK FOREIGN KEY (STU_NO) REFERENCES STU_STUDENT (STU_NO);

CREATE TABLE STU_STUDENT_FAMILY_PF_H
(
    AUDIT_ID                     BIGINT PRIMARY KEY AUTO_INCREMENT,
    AUDIT_TYPE                   CHAR(2),
    AUDIT_TIME                   DATETIME,
    STU_NO                       VARCHAR(16),
    HOME_ADDRESS                 VARCHAR(500),
    POSTCODE                     VARCHAR(6),
    IS_ONLY_CHILD                CHAR(1),
    NUMBER_OF_CHILDREN_IN_FAMILY INT,
    OTHER_CHILDREN               VARCHAR(500),
    PARENTS_MARITAL_STATUS       CHAR(1),
    FATHER_NAME                  VARCHAR(24),
    FATHER_DOB                   DATE,
    FATHER_OCCUPATION_TYPE       VARCHAR(6),
    FATHER_OCCUPATION            VARCHAR(500),
    FATHER_MONTHLY_INCOME        INT,
    FATHER_WORKPLACE             VARCHAR(500),
    FATHER_POSITION              VARCHAR(100),
    MOTHER_NAME                  VARCHAR(24),
    MOTHER_DOB                   DATE,
    MOTHER_OCCUPATION_TYPE       VARCHAR(6),
    MOTHER_OCCUPATION            VARCHAR(500),
    MOTHER_MONTHLY_INCOME        INT,
    MOTHER_WORKPLACE             VARCHAR(500),
    MOTHER_POSITION              VARCHAR(100),
    FAMILY_YEARLY_INCOME         INT,
    RAISED_BY                    CHAR(1),
    RAISED_BY_OTHER              VARCHAR(500),
    OTHER_GUARDIANS              VARCHAR(500),
    CREATED_AT                   DATETIME,
    CREATED_BY                   VARCHAR(24),
    UPDATED_AT                   DATETIME,
    UPDATED_BY                   VARCHAR(24)
);


DELIMITER ##
CREATE TRIGGER STU_STUDENT_FAMILY_PF_TRG_AI
    AFTER INSERT
    ON STU_STUDENT_FAMILY_PF
    FOR EACH ROW
BEGIN
    INSERT INTO STU_STUDENT_FAMILY_PF_H(AUDIT_ID, AUDIT_TYPE, AUDIT_TIME,
                                        STU_NO, HOME_ADDRESS, POSTCODE, IS_ONLY_CHILD, NUMBER_OF_CHILDREN_IN_FAMILY,
                                        OTHER_CHILDREN,
                                        PARENTS_MARITAL_STATUS, FATHER_NAME, FATHER_DOB, FATHER_OCCUPATION_TYPE,
                                        FATHER_OCCUPATION,
                                        FATHER_MONTHLY_INCOME, FATHER_WORKPLACE, FATHER_POSITION, MOTHER_NAME,
                                        MOTHER_DOB,
                                        MOTHER_OCCUPATION_TYPE, MOTHER_OCCUPATION, MOTHER_MONTHLY_INCOME,
                                        MOTHER_WORKPLACE, MOTHER_POSITION,
                                        FAMILY_YEARLY_INCOME, RAISED_BY, RAISED_BY_OTHER, OTHER_GUARDIANS, CREATED_AT,
                                        CREATED_BY, UPDATED_AT, UPDATED_BY)
    VALUES (NULL, 'AI', NOW(),
            NEW.STU_NO, NEW.HOME_ADDRESS, NEW.POSTCODE, NEW.IS_ONLY_CHILD, NEW.NUMBER_OF_CHILDREN_IN_FAMILY,
            NEW.OTHER_CHILDREN,
            NEW.PARENTS_MARITAL_STATUS, NEW.FATHER_NAME, NEW.FATHER_DOB, NEW.FATHER_OCCUPATION_TYPE,
            NEW.FATHER_OCCUPATION,
            NEW.FATHER_MONTHLY_INCOME, NEW.FATHER_WORKPLACE, NEW.FATHER_POSITION, NEW.MOTHER_NAME, NEW.MOTHER_DOB,
            NEW.MOTHER_OCCUPATION_TYPE, NEW.MOTHER_OCCUPATION, NEW.MOTHER_MONTHLY_INCOME, NEW.MOTHER_WORKPLACE,
            NEW.MOTHER_POSITION,
            NEW.FAMILY_YEARLY_INCOME, NEW.RAISED_BY, NEW.RAISED_BY_OTHER, NEW.OTHER_GUARDIANS, NEW.CREATED_AT,
            NEW.CREATED_BY, NEW.UPDATED_AT, NEW.UPDATED_BY);
END ##
DELIMITER ;

DELIMITER ##
CREATE TRIGGER STU_STUDENT_FAMILY_PF_TRG_BU
    BEFORE UPDATE
    ON STU_STUDENT_FAMILY_PF
    FOR EACH ROW
BEGIN
    INSERT INTO STU_STUDENT_FAMILY_PF_H(AUDIT_ID, AUDIT_TYPE, AUDIT_TIME,
                                        STU_NO, HOME_ADDRESS, POSTCODE, IS_ONLY_CHILD, NUMBER_OF_CHILDREN_IN_FAMILY,
                                        OTHER_CHILDREN,
                                        PARENTS_MARITAL_STATUS, FATHER_NAME, FATHER_DOB, FATHER_OCCUPATION_TYPE,
                                        FATHER_OCCUPATION,
                                        FATHER_MONTHLY_INCOME, FATHER_WORKPLACE, FATHER_POSITION, MOTHER_NAME,
                                        MOTHER_DOB,
                                        MOTHER_OCCUPATION_TYPE, MOTHER_OCCUPATION, MOTHER_MONTHLY_INCOME,
                                        MOTHER_WORKPLACE, MOTHER_POSITION,
                                        FAMILY_YEARLY_INCOME, RAISED_BY, RAISED_BY_OTHER, OTHER_GUARDIANS, CREATED_AT,
                                        CREATED_BY, UPDATED_AT, UPDATED_BY)
    VALUES (NULL, 'BU', NOW(),
            OLD.STU_NO, OLD.HOME_ADDRESS, OLD.POSTCODE, OLD.IS_ONLY_CHILD, OLD.NUMBER_OF_CHILDREN_IN_FAMILY,
            OLD.OTHER_CHILDREN,
            OLD.PARENTS_MARITAL_STATUS, OLD.FATHER_NAME, OLD.FATHER_DOB, OLD.FATHER_OCCUPATION_TYPE,
            OLD.FATHER_OCCUPATION,
            OLD.FATHER_MONTHLY_INCOME, OLD.FATHER_WORKPLACE, OLD.FATHER_POSITION, OLD.MOTHER_NAME, OLD.MOTHER_DOB,
            OLD.MOTHER_OCCUPATION_TYPE, OLD.MOTHER_OCCUPATION, OLD.MOTHER_MONTHLY_INCOME, OLD.MOTHER_WORKPLACE,
            OLD.MOTHER_POSITION,
            OLD.FAMILY_YEARLY_INCOME, OLD.RAISED_BY, OLD.RAISED_BY_OTHER, OLD.OTHER_GUARDIANS, OLD.CREATED_AT,
            OLD.CREATED_BY, OLD.UPDATED_AT, OLD.UPDATED_BY);
END ##
DELIMITER ;

DELIMITER ##
CREATE TRIGGER STU_STUDENT_FAMILY_PF_TRG_AU
    AFTER UPDATE
    ON STU_STUDENT_FAMILY_PF
    FOR EACH ROW
BEGIN
    INSERT INTO STU_STUDENT_FAMILY_PF_H(AUDIT_ID, AUDIT_TYPE, AUDIT_TIME,
                                        STU_NO, HOME_ADDRESS, POSTCODE, IS_ONLY_CHILD, NUMBER_OF_CHILDREN_IN_FAMILY,
                                        OTHER_CHILDREN,
                                        PARENTS_MARITAL_STATUS, FATHER_NAME, FATHER_DOB, FATHER_OCCUPATION_TYPE,
                                        FATHER_OCCUPATION,
                                        FATHER_MONTHLY_INCOME, FATHER_WORKPLACE, FATHER_POSITION, MOTHER_NAME,
                                        MOTHER_DOB,
                                        MOTHER_OCCUPATION_TYPE, MOTHER_OCCUPATION, MOTHER_MONTHLY_INCOME,
                                        MOTHER_WORKPLACE, MOTHER_POSITION,
                                        FAMILY_YEARLY_INCOME, RAISED_BY, RAISED_BY_OTHER, OTHER_GUARDIANS, CREATED_AT,
                                        CREATED_BY, UPDATED_AT, UPDATED_BY)
    VALUES (NULL, 'AU', NOW(),
            NEW.STU_NO, NEW.HOME_ADDRESS, NEW.POSTCODE, NEW.IS_ONLY_CHILD, NEW.NUMBER_OF_CHILDREN_IN_FAMILY,
            NEW.OTHER_CHILDREN,
            NEW.PARENTS_MARITAL_STATUS, NEW.FATHER_NAME, NEW.FATHER_DOB, NEW.FATHER_OCCUPATION_TYPE,
            NEW.FATHER_OCCUPATION,
            NEW.FATHER_MONTHLY_INCOME, NEW.FATHER_WORKPLACE, NEW.FATHER_POSITION, NEW.MOTHER_NAME, NEW.MOTHER_DOB,
            NEW.MOTHER_OCCUPATION_TYPE, NEW.MOTHER_OCCUPATION, NEW.MOTHER_MONTHLY_INCOME, NEW.MOTHER_WORKPLACE,
            NEW.MOTHER_POSITION,
            NEW.FAMILY_YEARLY_INCOME, NEW.RAISED_BY, NEW.RAISED_BY_OTHER, NEW.OTHER_GUARDIANS, NEW.CREATED_AT,
            NEW.CREATED_BY, NEW.UPDATED_AT, NEW.UPDATED_BY);
END ##
DELIMITER ;

DELIMITER ##
CREATE TRIGGER STU_STUDENT_FAMILY_PF_TRG_BD
    BEFORE DELETE
    ON STU_STUDENT_FAMILY_PF
    FOR EACH ROW
BEGIN
    INSERT INTO STU_STUDENT_FAMILY_PF_H(AUDIT_ID, AUDIT_TYPE, AUDIT_TIME,
                                        STU_NO, HOME_ADDRESS, POSTCODE, IS_ONLY_CHILD, NUMBER_OF_CHILDREN_IN_FAMILY,
                                        OTHER_CHILDREN,
                                        PARENTS_MARITAL_STATUS, FATHER_NAME, FATHER_DOB, FATHER_OCCUPATION_TYPE,
                                        FATHER_OCCUPATION,
                                        FATHER_MONTHLY_INCOME, FATHER_WORKPLACE, FATHER_POSITION, MOTHER_NAME,
                                        MOTHER_DOB,
                                        MOTHER_OCCUPATION_TYPE, MOTHER_OCCUPATION, MOTHER_MONTHLY_INCOME,
                                        MOTHER_WORKPLACE, MOTHER_POSITION,
                                        FAMILY_YEARLY_INCOME, RAISED_BY, RAISED_BY_OTHER, OTHER_GUARDIANS, CREATED_AT,
                                        CREATED_BY, UPDATED_AT, UPDATED_BY)
    VALUES (NULL, 'BD', NOW(),
            OLD.STU_NO, OLD.HOME_ADDRESS, OLD.POSTCODE, OLD.IS_ONLY_CHILD, OLD.NUMBER_OF_CHILDREN_IN_FAMILY,
            OLD.OTHER_CHILDREN,
            OLD.PARENTS_MARITAL_STATUS, OLD.FATHER_NAME, OLD.FATHER_DOB, OLD.FATHER_OCCUPATION_TYPE,
            OLD.FATHER_OCCUPATION,
            OLD.FATHER_MONTHLY_INCOME, OLD.FATHER_WORKPLACE, OLD.FATHER_POSITION, OLD.MOTHER_NAME, OLD.MOTHER_DOB,
            OLD.MOTHER_OCCUPATION_TYPE, OLD.MOTHER_OCCUPATION, OLD.MOTHER_MONTHLY_INCOME, OLD.MOTHER_WORKPLACE,
            OLD.MOTHER_POSITION,
            OLD.FAMILY_YEARLY_INCOME, OLD.RAISED_BY, OLD.RAISED_BY_OTHER, OLD.OTHER_GUARDIANS, OLD.CREATED_AT,
            OLD.CREATED_BY, OLD.UPDATED_AT, OLD.UPDATED_BY);
END ##
DELIMITER ;